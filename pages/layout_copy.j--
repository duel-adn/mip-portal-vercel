/**
    (C) Duel srl 2021.

    Pagina di test del layout.

    Revision history

    | Data       | Autore | Descrizione 
    | ---------- | ------ | ----------------------------------- |
    | 2021/08/10 | Duel   | Prima versione                      |
*/
import MIPPage from '../components/page/MIPPage'
import { Disclosure } from '@headlessui/react'
import { useEffect, useState } from 'react'

function AlternativeHeader({ num }) {
  return (
    <div className="path-header">
      <h3>pah {num}</h3>
      <p>time {num}</p>
      <hr />
    </div>
  )
}

function LegHeader({ num }) {
  return (
    <div className="leg-header">
      <h3>leg {num}</h3>
      <p>time {num}</p>
      <hr />
    </div>
  )
}

function ComplexStep({ path, leg, step }) {
  return (
    <div>
      <Disclosure>
      <Disclosure.Button><h5>Step {step}</h5></Disclosure.Button>
      <Disclosure.Panel>
      <p>Path {path} Leg {leg}</p>
      <p>Step 1</p>
      <p>Step 2</p>
      <p>Step 3</p>
      </Disclosure.Panel>

      </Disclosure>
    </div>
  )
}

function Step({ path, leg, step }) {
  return (
    <div>
      <h5>Step {step}</h5>
      <p>Path {path} Leg {leg}</p>

    </div>
  )
}

function Leg({ path, num }) {
  return (
    <div>
    <Disclosure>
      <Disclosure.Button><LegHeader path={path} leg={num} /></Disclosure.Button>
      <Disclosure.Panel>
        <Step path={path} leg={num} step={1} />
        <ComplexStep path={path} leg={num} step={2} />
        <Step path={path} leg={num} step={3} />
        <Step path={path} leg={num} step={4} />
      </Disclosure.Panel>
      </Disclosure>
    </div>
  )
}

function PathLegs({ num }) {
  return (
      <div>
      <Leg path={num} leg={1} />
      <Leg path={num} leg={2} />
      <Leg path={num} leg={3} />
      </div>
  )
}
function PathData({ num }) {
  return (
    <>
      <Disclosure.Button className="mip-w-100"><AlternativeHeader num={1} /></Disclosure.Button>
      <PathLegs num={num} />
    </>
  )
}


function MIPPlanPanelHeader({from, to, type}) {
  return (
    <div className="mip-w-100">
      <div className="mip-w-100">{from}</div>
      <div className="mip-w-100">{to}</div>
    </div>
  )
}

function MIPPlanPanel1({from, to, type}) {
  return (
    <div className="mip-w-100">
      <MIPPlanPanelHeader from={from} to={to} type={type}/>
      <MIPPlanContainer />
    </div>
  )
}

function MIPAlternativeDetails({alternative}) {
  return (
    <div className="mip-alernative-details">
      {JSON.stringify(alternative)}
    </div>
  )
}

function MIPPlanAlternativePanel({className, alternative}) {
  useEffect(() => {
    
  })
  return (
    <Disclosure.Panel static className={className}>
        <MIPPlanAlternativeHeader alternative={alternative} />
        <MIPAlternativeDetails className="mip-alernative-details" alternative={alternative} />
    </Disclosure.Panel>
  )
}

function MIPPlanAlternativeHeader({alternative, ...otherProps}) {
  return (
    <Disclosure.Button className="mip-alternative-header" 
      {...otherProps}>
      <p>{alternative.length}, {alternative.time}</p>
      <p>{alternative.description}</p>
    </Disclosure.Button>

  )
}

function MIPPlanPanel({plan}) {
  const [selectedAlt, setSelectedAlt] = useState(plan.alternatives[0])

  return (
    <Disclosure as="div" className="mip-plan-panel">
      {({ open }) => (
        <>
        {plan.alternatives && plan.alternatives.map(alt => 
          <MIPPlanAlternativeHeader 
            key={alt.id} alternative={alt} />
        )}
        <MIPPlanAlternativePanel className={`mip-alternative-panel${open ? ' open' : ''}`}
          alternative={selectedAlt} />
        </>
      )}
    </Disclosure>
  )
}

const plan = {
  from: "torino",
  to: "alessandria",
  mode: "CAR",

  alternatives: [
    {
      id: 1,
      length: '2 Km',
      time: "1 ora e 20 min.",
      description: 'per grande raccordo anulare e via Appia'
    },
    {
      id: 2,
      length: '3 Km',
      time: "1 ora e 40 min.",
      description: 'per grande raccordo anulare e via colombo'
    },
  ],
}

export default function Layout({ eventData }) {
  const [selected, setSelected] = useState(1)

  return (
    <MIPPage.Page className="mip-home-MIPPage" pageTitle="Layout test" >
      <section className="path-page">
        <div className="path-dialog">{plan.from} - {plan.to}</div>
        <MIPPlanPanel plan={plan} />
        {/* <div className="path-data">
          <Disclosure>
            <Disclosure.Panel className="alternative-panel"><PathData num={selected} /></Disclosure.Panel>
            <Disclosure.Button><AlternativeHeader num={1} /></Disclosure.Button>
            <Disclosure.Button><AlternativeHeader num={2} /></Disclosure.Button>
            <Disclosure.Button><AlternativeHeader num={3} /></Disclosure.Button>
          </Disclosure>
        </div> */}
      </section>
    </MIPPage.Page >
  )
}
